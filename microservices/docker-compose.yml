version: "3.8"

services:
  user_service:
    image: user_service
    container_name: user_service
    build:
      context: .
      dockerfile: ./user-service/Dockerfile
    restart: on-failure
    environment:
      USER_DB_HOST: ${USER_DB_HOST}
      USER_DB_PORT: ${USER_DB_PORT}
      USER_DB_USER: ${USER_DB_USER}
      USER_DB_PASS: ${USER_DB_PASS}
      USER_DB_NAME: ${USER_DB_NAME}
      USER_SERVICE_PORT: ${USER_SERVICE_PORT}
    depends_on:
      - user_db
    networks:
      - network

  auth_service:
    image: auth_service
    container_name: auth_service
    build:
      context: .
      dockerfile: ./auth-service/Dockerfile
    restart: on-failure
    environment:
      AUTH_DB_HOST: ${AUTH_DB_HOST}
      AUTH_DB_PORT: ${AUTH_DB_PORT}
      AUTH_DB_USER: ${AUTH_DB_USER}
      AUTH_DB_PASS: ${AUTH_DB_PASS}
      AUTH_DB_NAME: ${AUTH_DB_NAME}
      AUTH_SERVICE_PORT: ${AUTH_SERVICE_PORT}
    depends_on:
      - auth_db
    networks:
      - network

  connection_service:
    image: connection_service
    container_name: connection_service
    build:
      context: .
      dockerfile: ./connection-service/Dockerfile
    restart: on-failure
    environment:
      CONNECTION_DB_HOST: ${CONNECTION_DB_HOST}
      CONNECTION_DB_PORT: ${CONNECTION_DB_PORT}
      CONNECTION_DB_USER: ${CONNECTION_DB_USER}
      CONNECTION_DB_PASS: ${CONNECTION_DB_PASS}
      CONNECTION_DB_NAME: ${CONNECTION_DB_NAME}
      CONNECTION_SERVICE_PORT: ${CONNECTION_SERVICE_PORT}
    depends_on:
      - connection_db
    networks:
      - network

  api_gateway:
    image: api_gateway
    container_name: api_gateway
    build:
      context: .
      dockerfile: ./api_gateway/Dockerfile
    restart: on-failure
    ports:
      - ${GATEWAY_PORT}:${GATEWAY_PORT}
    environment:
      GATEWAY_PORT: ${GATEWAY_PORT}
      USER_SERVICE_HOST: ${USER_SERVICE_HOST}
      USER_SERVICE_PORT: ${USER_SERVICE_PORT}
    networks:
      - network

  user_db:
    image: postgres
    container_name: user_db
    restart: on-failure
    environment:
      POSTGRES_USER: ${USER_DB_USER}
      POSTGRES_PASSWORD: ${USER_DB_PASS}
      POSTGRES_DB: ${USER_DB_NAME}
    networks:
      - network

  auth_db:
    image: postgres
    container_name: auth_db
    restart: on-failure
    environment:
      POSTGRES_USER: ${AUTH_DB_USER}
      POSTGRES_PASSWORD: ${AUTH_DB_PASS}
      POSTGRES_DB: ${AUTH_DB_NAME}
    networks:
      - network

  connection_db:
    image: neo4j
    container_name: connection_db
    restart: on-failure
    ports:
      - 7688:7687
    networks:
      - network

  # nats:
  #   image: nats
  #   container_name: nats
  #   restart: on-failure
  #   networks:
  #     - network

networks:
  network:
    driver: bridge